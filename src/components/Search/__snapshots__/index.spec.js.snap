exports[`Component: Search should add an item based on the value in the state 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="panel">
    <form
        className="form-search"
        onSubmit={[Function]}>
        <div
            className="input-search">
            <label>
                From
            </label>
            <input
                name="startingPoint"
                onChange={[Function]}
                value="" />
        </div>
        <div
            className="input-search">
            <label>
                To
            </label>
            <input
                name="destination"
                onChange={[Function]}
                value="" />
        </div>
        <button
            className="btn"
            type="sumbit">
            Search!
        </button>
        <button
            className="btn-result"
            onClick={[Function]}>
            Last Research
        </button>
    </form>
    <div
        className="result">
        <p>
            No services available.
        </p>
    </div>
    
</div>,
  "nodes": Array [
    <div
      className="panel">
      <form
            className="form-search"
            onSubmit={[Function]}>
            <div
                  className="input-search">
                  <label>
                        From
                  </label>
                  <input
                        name="startingPoint"
                        onChange={[Function]}
                        value="" />
            </div>
            <div
                  className="input-search">
                  <label>
                        To
                  </label>
                  <input
                        name="destination"
                        onChange={[Function]}
                        value="" />
            </div>
            <button
                  className="btn"
                  type="sumbit">
                  Search!
            </button>
            <button
                  className="btn-result"
                  onClick={[Function]}>
                  Last Research
            </button>
      </form>
      <div
            className="result">
            <p>
                  No services available.
            </p>
      </div>
      
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Search
        crsCode={
                Array [
                        Object {
                          "crsCode": "CTW",
                          "stationName": "Church & Oswaldtwistle",
                        },
                        Object {
                          "crsCode": "LZB",
                          "stationName": "Lazonby & Kirkoswald",
                        },
                      ]
        }
        fetchCrsCode={[Function]}
        fetchRoutes={[Function]}
        items={
                Array [
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Victoria",
                        },
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Victoria",
                        },
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Waterloo",
                        },
                      ]
        } />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Search {
        "_reactInternalInstance": [Circular],
        "appendRouteHistory": [Function],
        "context": Object {},
        "findCrsSuggestionsByName": [Function],
        "getJourneyCrs": [Function],
        "handleSubmitForm": [Function],
        "onChange": [Function],
        "onClick": [Function],
        "props": Object {
          "crsCode": Array [
            Object {
              "crsCode": "CTW",
              "stationName": "Church & Oswaldtwistle",
            },
            Object {
              "crsCode": "LZB",
              "stationName": "Lazonby & Kirkoswald",
            },
          ],
          "fetchCrsCode": [Function],
          "fetchRoutes": [Function],
          "items": Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ],
        },
        "refs": Object {},
        "saveDestinations": [Function],
        "state": Object {
          "destination": "",
          "items": Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ],
          "results": Array [],
          "show": false,
          "startingPoint": "",
          "value": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="panel">
          <form
                    className="form-search"
                    onSubmit={[Function]}>
                    <div
                              className="input-search">
                              <label>
                                        From
                              </label>
                              <input
                                        name="startingPoint"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <div
                              className="input-search">
                              <label>
                                        To
                              </label>
                              <input
                                        name="destination"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <button
                              className="btn"
                              type="sumbit">
                              Search!
                    </button>
                    <button
                              className="btn-result"
                              onClick={[Function]}>
                              Last Research
                    </button>
          </form>
          <div
                    className="result">
                    <p>
                              No services available.
                    </p>
          </div>
          
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="panel">
          <form
                    className="form-search"
                    onSubmit={[Function]}>
                    <div
                              className="input-search">
                              <label>
                                        From
                              </label>
                              <input
                                        name="startingPoint"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <div
                              className="input-search">
                              <label>
                                        To
                              </label>
                              <input
                                        name="destination"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <button
                              className="btn"
                              type="sumbit">
                              Search!
                    </button>
                    <button
                              className="btn-result"
                              onClick={[Function]}>
                              Last Research
                    </button>
          </form>
          <div
                    className="result">
                    <p>
                              No services available.
                    </p>
          </div>
          
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Search
    crsCode={
        Array [
            Object {
              "crsCode": "CTW",
              "stationName": "Church & Oswaldtwistle",
            },
            Object {
              "crsCode": "LZB",
              "stationName": "Lazonby & Kirkoswald",
            },
          ]
    }
    fetchCrsCode={[Function]}
    fetchRoutes={[Function]}
    items={
        Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ]
    } />,
}
`;

exports[`Component: Search should add an item based on the value in the state 2`] = `undefined`;

exports[`Component: Search should add an item based on the value in the state 3`] = `undefined`;

exports[`Component: Search should match its empty snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="panel">
    <form
        className="form-search"
        onSubmit={[Function]}>
        <div
            className="input-search">
            <label>
                From
            </label>
            <input
                name="startingPoint"
                onChange={[Function]}
                value="" />
        </div>
        <div
            className="input-search">
            <label>
                To
            </label>
            <input
                name="destination"
                onChange={[Function]}
                value="" />
        </div>
        <button
            className="btn"
            type="sumbit">
            Search!
        </button>
        <button
            className="btn-result"
            onClick={[Function]}>
            Last Research
        </button>
    </form>
    <div
        className="result">
        <p>
            No services available.
        </p>
    </div>
    
</div>,
  "nodes": Array [
    <div
      className="panel">
      <form
            className="form-search"
            onSubmit={[Function]}>
            <div
                  className="input-search">
                  <label>
                        From
                  </label>
                  <input
                        name="startingPoint"
                        onChange={[Function]}
                        value="" />
            </div>
            <div
                  className="input-search">
                  <label>
                        To
                  </label>
                  <input
                        name="destination"
                        onChange={[Function]}
                        value="" />
            </div>
            <button
                  className="btn"
                  type="sumbit">
                  Search!
            </button>
            <button
                  className="btn-result"
                  onClick={[Function]}>
                  Last Research
            </button>
      </form>
      <div
            className="result">
            <p>
                  No services available.
            </p>
      </div>
      
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Search
        crsCode={
                Array [
                        Object {
                          "crsCode": "CTW",
                          "stationName": "Church & Oswaldtwistle",
                        },
                        Object {
                          "crsCode": "LZB",
                          "stationName": "Lazonby & Kirkoswald",
                        },
                      ]
        }
        fetchCrsCode={[Function]}
        fetchRoutes={[Function]}
        items={
                Array [
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Victoria",
                        },
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Victoria",
                        },
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Waterloo",
                        },
                      ]
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Search {
        "_reactInternalInstance": [Circular],
        "appendRouteHistory": [Function],
        "context": Object {},
        "findCrsSuggestionsByName": [Function],
        "getJourneyCrs": [Function],
        "handleSubmitForm": [Function],
        "onChange": [Function],
        "onClick": [Function],
        "props": Object {
          "crsCode": Array [
            Object {
              "crsCode": "CTW",
              "stationName": "Church & Oswaldtwistle",
            },
            Object {
              "crsCode": "LZB",
              "stationName": "Lazonby & Kirkoswald",
            },
          ],
          "fetchCrsCode": [Function],
          "fetchRoutes": [Function],
          "items": Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ],
        },
        "refs": Object {},
        "saveDestinations": [Function],
        "state": Object {
          "destination": "",
          "results": Array [],
          "show": false,
          "startingPoint": "",
          "value": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="panel">
          <form
                    className="form-search"
                    onSubmit={[Function]}>
                    <div
                              className="input-search">
                              <label>
                                        From
                              </label>
                              <input
                                        name="startingPoint"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <div
                              className="input-search">
                              <label>
                                        To
                              </label>
                              <input
                                        name="destination"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <button
                              className="btn"
                              type="sumbit">
                              Search!
                    </button>
                    <button
                              className="btn-result"
                              onClick={[Function]}>
                              Last Research
                    </button>
          </form>
          <div
                    className="result">
                    <p>
                              No services available.
                    </p>
          </div>
          
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="panel">
          <form
                    className="form-search"
                    onSubmit={[Function]}>
                    <div
                              className="input-search">
                              <label>
                                        From
                              </label>
                              <input
                                        name="startingPoint"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <div
                              className="input-search">
                              <label>
                                        To
                              </label>
                              <input
                                        name="destination"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <button
                              className="btn"
                              type="sumbit">
                              Search!
                    </button>
                    <button
                              className="btn-result"
                              onClick={[Function]}>
                              Last Research
                    </button>
          </form>
          <div
                    className="result">
                    <p>
                              No services available.
                    </p>
          </div>
          
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Search
    crsCode={
        Array [
            Object {
              "crsCode": "CTW",
              "stationName": "Church & Oswaldtwistle",
            },
            Object {
              "crsCode": "LZB",
              "stationName": "Lazonby & Kirkoswald",
            },
          ]
    }
    fetchCrsCode={[Function]}
    fetchRoutes={[Function]}
    items={
        Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ]
    } />,
}
`;

exports[`Component: Search should pass a selected value to the onChange function 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="panel">
    <form
        className="form-search"
        onSubmit={[Function]}>
        <div
            className="input-search">
            <label>
                From
            </label>
            <input
                name="startingPoint"
                onChange={[Function]}
                value="" />
        </div>
        <div
            className="input-search">
            <label>
                To
            </label>
            <input
                name="destination"
                onChange={[Function]}
                value="" />
        </div>
        <button
            className="btn"
            type="sumbit">
            Search!
        </button>
        <button
            className="btn-result"
            onClick={[Function]}>
            Last Research
        </button>
    </form>
    <div
        className="result">
        <p>
            No services available.
        </p>
    </div>
    
</div>,
  "nodes": Array [
    <div
      className="panel">
      <form
            className="form-search"
            onSubmit={[Function]}>
            <div
                  className="input-search">
                  <label>
                        From
                  </label>
                  <input
                        name="startingPoint"
                        onChange={[Function]}
                        value="" />
            </div>
            <div
                  className="input-search">
                  <label>
                        To
                  </label>
                  <input
                        name="destination"
                        onChange={[Function]}
                        value="" />
            </div>
            <button
                  className="btn"
                  type="sumbit">
                  Search!
            </button>
            <button
                  className="btn-result"
                  onClick={[Function]}>
                  Last Research
            </button>
      </form>
      <div
            className="result">
            <p>
                  No services available.
            </p>
      </div>
      
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance":  {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Search
        crsCode={
                Array [
                        Object {
                          "crsCode": "CTW",
                          "stationName": "Church & Oswaldtwistle",
                        },
                        Object {
                          "crsCode": "LZB",
                          "stationName": "Lazonby & Kirkoswald",
                        },
                      ]
        }
        fetchCrsCode={[Function]}
        fetchRoutes={[Function]}
        items={
                Array [
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Victoria",
                        },
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Victoria",
                        },
                        Object {
                          "destination": "gatwick airport",
                          "startingPoint": "London Waterloo",
                        },
                      ]
        } />,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Search {
        "_reactInternalInstance": [Circular],
        "appendRouteHistory": [Function],
        "context": Object {},
        "findCrsSuggestionsByName": [Function],
        "getJourneyCrs": [Function],
        "handleSubmitForm": [Function],
        "onChange": [Function],
        "onClick": [Function],
        "props": Object {
          "crsCode": Array [
            Object {
              "crsCode": "CTW",
              "stationName": "Church & Oswaldtwistle",
            },
            Object {
              "crsCode": "LZB",
              "stationName": "Lazonby & Kirkoswald",
            },
          ],
          "fetchCrsCode": [Function],
          "fetchRoutes": [Function],
          "items": Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ],
        },
        "refs": Object {},
        "saveDestinations": [Function],
        "state": Object {
          "destination": "",
          "results": Array [],
          "show": false,
          "startingPoint": "",
          "undefined": "Gatwick Airport",
          "value": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="panel">
          <form
                    className="form-search"
                    onSubmit={[Function]}>
                    <div
                              className="input-search">
                              <label>
                                        From
                              </label>
                              <input
                                        name="startingPoint"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <div
                              className="input-search">
                              <label>
                                        To
                              </label>
                              <input
                                        name="destination"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <button
                              className="btn"
                              type="sumbit">
                              Search!
                    </button>
                    <button
                              className="btn-result"
                              onClick={[Function]}>
                              Last Research
                    </button>
          </form>
          <div
                    className="result">
                    <p>
                              No services available.
                    </p>
          </div>
          
</div>,
        "_debugID": 6,
        "_renderedOutput": <div
          className="panel">
          <form
                    className="form-search"
                    onSubmit={[Function]}>
                    <div
                              className="input-search">
                              <label>
                                        From
                              </label>
                              <input
                                        name="startingPoint"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <div
                              className="input-search">
                              <label>
                                        To
                              </label>
                              <input
                                        name="destination"
                                        onChange={[Function]}
                                        value="" />
                    </div>
                    <button
                              className="btn"
                              type="sumbit">
                              Search!
                    </button>
                    <button
                              className="btn-result"
                              onClick={[Function]}>
                              Last Research
                    </button>
          </form>
          <div
                    className="result">
                    <p>
                              No services available.
                    </p>
          </div>
          
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Search
    crsCode={
        Array [
            Object {
              "crsCode": "CTW",
              "stationName": "Church & Oswaldtwistle",
            },
            Object {
              "crsCode": "LZB",
              "stationName": "Lazonby & Kirkoswald",
            },
          ]
    }
    fetchCrsCode={[Function]}
    fetchRoutes={[Function]}
    items={
        Array [
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Victoria",
            },
            Object {
              "destination": "gatwick airport",
              "startingPoint": "London Waterloo",
            },
          ]
    } />,
}
`;
